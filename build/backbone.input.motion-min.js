!function(t){if("function"==typeof define&&define.amd)define("backbone.input.motion",["jquery","underscore","backbone"],t);else if("object"==typeof module&&module&&"object"==typeof module.exports)module.exports=t;else{var e=window.jQuery||window.Zepto||window.vQuery;t(e,window._,window.Backbone)}}(function(t,e,o){var n=n||window.APP||null,i=null!==n,r=i&&"undefined"!=typeof n.View?n.View:o.View,c=r.prototype.params||new o.Model;c.set({accelerometer:{x:0,y:0,z:0}});var a=r.prototype.params||new o.Model;a.set({});var s=r.extend({options:{monitor:[],motion:{states:["accelerometer","rift"]}},params:c.clone(),state:a.clone(),initialize:function(t){t=t||{},this.options=e.extend({},this.options,t);var o=this.options.monitorMotion||e.inArray("motion",this.options.monitor);return o&&this.monitorMotion(),r.prototype.initialize.call(this,t)},monitorMotion:function(){"undefined"==typeof a&&(a=!0),a?(this._monitorMotionOn(),this.trigger("monitor-motion-on")):(this._monitorMotionOff(),this.trigger("monitor-motion-off"))},_monitorMotionOn:function(){if(this.el){var t=this,o=this.options.motion.states||[];e.inArray("accelerometer",o)&&(window.DeviceOrientationEvent?window.addEventListener("deviceorientation",function(e){t._onMotionAccelerometer([e.alpha,e.beta,e.gamma])},!0):window.DeviceMotionEvent?window.addEventListener("devicemotion",function(e){t._onMotionAccelerometer([2*e.acceleration.x,2*e.acceleration.y,2*e.acceleration.z])},!0):window.addEventListener("MozOrientation",function(e){t._onMotionAccelerometer([50*e.orientation.x,50*e.orientation.y,50*e.orientation.z])},!0)),e.inArray("rift",o)&&(d.script("//rawgit.com/Instrument/oculus-bridge/master/web/build/OculusBridge.min.js"),setTimeout(function(){t._OculusBridge=new OculusBridge({onOrientationUpdate:function(e){t._onOrientationUpdate(e)}}),t._OculusBridge.connect()},1e3)),this.state.set("motion",o)}},_monitorMotionOff:function(){var t=this.state.get("motion")||[];e.inArray("accelerometer",t)&&(window.DeviceOrientationEvent?window.removeEventListener("deviceorientation",function(t){self._onMotionAccelerometer([t.alpha,t.beta,t.gamma])},!0):window.DeviceMotionEvent?window.removeEventListener("devicemotion",function(t){self._onMotionAccelerometer([2*t.acceleration.x,2*t.acceleration.y,2*t.acceleration.z])},!0):window.removeEventListener("MozOrientation",function(t){self._onMotionAccelerometer([50*t.orientation.x,50*t.orientation.y,50*t.orientation.z])},!0)),e.inArray("rift",t)&&this._OculusBridge&&this._OculusBridge.disconnect(),this.state.set("motion",!1)},onMotionAccelerometer:function(){},onOrientationUpdate:function(){},_onMotionAccelerometer:function(t){var o=e.inArray("motion",this.options.monitor)&&e.inArray("accelerometer",this.options.motion.states);o&&(e.inDebug()&&console.log(" accelerometer motion detected",t),this.params.set({accelerometer:{x:t[0],y:t[1],z:t[2]}}),this.trigger("accelerometer",t),this.onMotionAccelerometer(t))},_onOrientationUpdate:function(t){var o=e.inArray("motion",this.options.monitor)&&e.inArray("rift",this.options.motion.states);o&&(e.inDebug()&&console.log("rift motion detected",t),this.params.set({rift:t}),this.trigger("rift",t),this.onOrientationUpdate(t))}});e.mixin({inArray:function(t,e){return e.indexOf(t)>-1},inDebug:function(){return"undefined"!=typeof DEBUG&&DEBUG}});var d=d||window.c||{},m=document||{};return d.script=d.script||function(t,e){if(e=e||{},t=t||!1,e.id=e.id||!1,e.async=e.async||!1,t&&(!e.id||!m.getElementById(e.id))){var o="script",n=m.createElement(o);t=t.replace(/^http:|^https:/,""),n.type="text/javascript",e.id&&(n.id=e.id),n.async=e.async,n.src=("https:"==location.protocol?"https:":"http:")+t;var i=m.getElementsByTagName(o)[0];i.parentNode.insertBefore(n,i)}},o.Input=o.Input||{},o.Input.Motion=s,i&&(n.Input=n.Input||{},n.Input.Motion=s),"object"==typeof window&&"object"==typeof window.document&&(window.Backbone=o,i&&(window.APP=n)),s});